@model RIC.Models.Account.AddTargetsVM
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.css">
@{
    ViewBag.Title = "AddTargets";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<style type="text/css">
    .textCapitalize
    {
        text-transform: capitalize;
    }

    .custom-checkbox
    {
        min-height: 1rem;
        padding-left: 0;
        margin-right: 0;
        cursor: pointer;
    }

        .custom-checkbox .custom-control-indicator
        {
            content: "";
            display: inline-block;
            position: relative;
            width: 30px;
            height: 10px;
            background-color: #818181;
            border-radius: 15px;
            margin-right: 10px;
            -webkit-transition: background .3s ease;
            transition: background .3s ease;
            vertical-align: middle;
            margin: 0 16px;
            box-shadow: none;
        }

            .custom-checkbox .custom-control-indicator:after
            {
                content: "";
                position: absolute;
                display: inline-block;
                width: 18px;
                height: 18px;
                background-color: #f1f1f1;
                border-radius: 21px;
                box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4);
                left: -2px;
                top: -4px;
                -webkit-transition: left .3s ease, background .3s ease, box-shadow .1s ease;
                transition: left .3s ease, background .3s ease, box-shadow .1s ease;
            }

        .custom-checkbox .custom-control-input:checked ~ .custom-control-indicator
        {
            background-color: #84c7c1;
            background-image: none;
            box-shadow: none !important;
        }

            .custom-checkbox .custom-control-input:checked ~ .custom-control-indicator:after
            {
                background-color: #84c7c1;
                left: 15px;
            }

        .custom-checkbox .custom-control-input:focus ~ .custom-control-indicator
        {
            box-shadow: none !important;
        }

    .commentsGold
    {
        font-size: 20px;
        color: gold;
    }

    .commentsGreen
    {
        font-size: 20px;
        color: aquamarine;
    }

    .popover-content
    {
        height: 100px;
        width: 200px;
        overflow: auto;
    }

    .popover-title
    {
        font-weight: bold;
        font-size: 12px;
    }
</style>
<link href="~/Content/CSS/Account/AddTargets.css" rel="stylesheet" />
<legend>@ViewBag.Header</legend>
<div class="container-fluid bg-light SearchContainer ">
    @using (Html.BeginForm())
    {

        <div class="row rowCenter">
            <div class="col-md-2">
                <label>Reporting To</label>
            </div>
            <div class="col-md-2">
                <div class="form-group ">
                    @Html.DropDownListFor(m => m.EmpCd, Model.ReportingList, new { @class = "form-control input-sm chat-input textCapitalize" })
                </div>
            </div>
            <div class="col-md-2">
                <label>Select Quarter</label>
            </div>
            <div class="col-md-2 ">
                @*<div class="form-group">
            @Html.DropDownListFor(m => m.Month, Model.MonthList, new { @class = "form-control input-sm chat-input" })
        </div>*@
                <div class="form-group">
                    @*@Html.DropDownListFor(m => m.Month, Model.QuarterList, new { @class = "form-control input-sm chat-input" })*@
                    @Html.DropDownListFor(m => m.Quarter, Model.QuarterList, new { @class = "form-control input-sm chat-input" })
                </div>
            </div>
            <div class="col-md-2">
                <label>Select Year</label>
            </div>
            <div class="col-md-2 ">
                <div class="form-group">
                    @Html.DropDownListFor(m => m.Year, Model.YearList, new { @class = "form-control input-sm chat-input" })
                </div>
            </div>
        </div>

        <div class="row align-items-center rowCenter">
            <div class="col-md-2">
                <button name="submit" value="SearchBtn" type="submit" id="SearchBtn" class="btn btn-primary btn-block">Search</button>
            </div>
            <div class="col-md-2">
                <button name="submit" value="SearchResetBtn" type="submit" class="btn btn-danger btn-block">Reset</button>
            </div>
        </div>
        
        <div class="bd-example">
  
  
  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
          <h4 class="modal-title" id="exampleModalLabel"></h4>
        </div>
        <div class="modal-body col-md-12">
          <form>
            <div class="form-group col-md-6">
              <label for="recipient-name" class="form-control-label">Year:</label>
              @Html.DropDownListFor(m => m.Year, Model.YearList, new { @class = "form-control input-sm chat-input", @id="GetYear"})
            </div>
            <div class="form-group col-md-6">
                <label for="message-text" class="form-control-label">Quarter:</label>
                @*@Html.DropDownListFor(m => m.PreviousMonth, Model.MonthList, new { @class = "form-control input-sm chat-input",@id="GetMonth"})*@
                @Html.DropDownListFor(m => m.PreviousMonth, Model.QuarterList, new { @class = "form-control input-sm chat-input", @id = "GetMonth" })
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" onclick="GetData()" style="margin-right: 39%" class="btn btn-primary">Populate Data</button>
        </div>
      </div>
    </div>
  </div>
</div>
    }
</div>
@if (Model.EmployeeList != null)
{
    using (Html.BeginForm())
    {
       


    <div class="container-fluid bg-light resultContainer">
        @if (ViewBag.alertText != null)
        { 
            <div class="alert alert-success alertStyle">
                <strong>Success!</strong> @ViewBag.alertText
            </div>
        }
        <div class="tablediv">
            <table id="UserList" class="table table-striped  table-hover table-bordered table-fixed">
                <thead class="theadStyle">
                    <tr>

                        <td class="tableHead">
                            <label>Employee ID</label>
                        </td>
                        <td style="width: 20%" class="textCapitalize tableHead">
                            <label>Employee Name</label>
                        </td>
                        @*<td class="textCapitalize ">
                       <label>Reporting To</label>
                    </td>*@
                        <td class="tableHead ">
                            <label>Exp. Before Joining Sunrise</label>
                        </td>
                        <td class="tableHead ">
                            <label>Exp. In Sunrise</label>
                        </td>
                        <td class="tableHead text-center">
                            <label>Submissions</label>
                        </td>
                        <td class="tableHead text-center">
                            <label>Interviews</label>
                        </td>
                        <td class="tableHead text-center">
                            <label>Hires</label>
                        </td>
                        <td class="tableHead text-center">
                            <label>Comments</label>
                        </td>
                        @if (ViewBag.allowEdit == true)
                        { 
                            <td class="text-center">
                                <label>Edit</label>
                                <br />
                                <label class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(m => m.SelectAllCheck, new { style = "display: none;", @class = "custom-control-input" })
                                    <span class="custom-control-indicator"></span>
                                </label>
                            </td>
                        }
                        <td class="text-center">
                            <label>Action</label>
                        </td>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.EmployeeList.Count == 0)
                    {
                        <tr>
                            <td colspan="9">
                                <div style="text-align: center" class="alert alert-warning">
                                    <strong>No data available in table</strong>
                                </div>
                            </td>
                        </tr>
                    }
                    @for (int i = 0; i < Model.EmployeeList.Count; i++)
                    {
                        @Html.HiddenFor(m => m.EmployeeList[i].TargetId)
                        @Html.HiddenFor(m => m.EmployeeList[i].EmpCd)
                        @Html.HiddenFor(m => m.EmployeeList[i].MgrCd)
                        @*@Html.HiddenFor(m => m.EmployeeList[i].Month)*@
                        @Html.HiddenFor(m => m.EmployeeList[i].Quarter)
                        @Html.HiddenFor(m => m.EmployeeList[i].Year)
                        @Html.HiddenFor(m => m.EmployeeList[i].EmployeeName)
                        @Html.HiddenFor(m => m.EmployeeList[i].ExpInSunrise)
                        @Html.HiddenFor(m => m.EmployeeList[i].TotalExp)
                        @Html.HiddenFor(m => m.EmployeeList[i].ReportingID)
                        @Html.HiddenFor(m => m.EmpCd)
                        @*@Html.HiddenFor(m => m.Month)*@
                        @Html.HiddenFor(m => m.Quarter)
                        @Html.HiddenFor(m => m.Year)
                        <tr>

                            <td>
                                @Html.DisplayFor(m => m.EmployeeList[i].EmpCd)
                            </td>
                            <td class="textCapitalize">
                                @Html.DisplayFor(m => m.EmployeeList[i].EmployeeName)
                            </td>

                            <td>
                                @Html.DisplayFor(m => m.EmployeeList[i].TotalExp)
                            </td>
                            <td>
                                @Html.DisplayFor(m => m.EmployeeList[i].ExpInSunrise)
                            </td>
                            <td class="text-center">
                                @if (ViewBag.allowEdit == true)
                                {

                                    @Html.TextBoxFor(m => m.EmployeeList[i].SubmissionTarget, new { required = "required", type = "number", step = "any", @class = "form-control input-sm chat-input chkEdit" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.EmployeeList[i].SubmissionTarget, new { required = "required", type = "number", step = "any", @class = "form-control input-sm chat-input chkEdit", disabled = "disabled" })
                                }
                            </td>
                            <td class="text-center">
                                @if (ViewBag.allowEdit == true)
                                {
                                    @Html.TextBoxFor(m => m.EmployeeList[i].InterviewTarget, new { required = "required", type = "number", step = "any", @class = "form-control input-sm chat-input chkEdit" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.EmployeeList[i].InterviewTarget, new { required = "required", type = "number", step = "any", @class = "form-control input-sm chat-input chkEdit", disabled = "disabled" })
                                }
                            </td>
                            <td class="text-center">
                                @if (ViewBag.allowEdit == true)
                                {
                                    @Html.TextBoxFor(m => m.EmployeeList[i].HiresTarget, new { required = "required", type = "number", step = "any", @class = "form-control input-sm chat-input chkEdit" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.EmployeeList[i].HiresTarget, new { required = "required", type = "number", step = "any", @class = "form-control input-sm chat-input chkEdit", disabled = "disabled" })
                                }
                            </td>
                            <td class="text-center">
                                @if (ViewBag.allowEdit == true)
                                {
                                    @Html.TextAreaFor(m => m.EmployeeList[i].Comments, new { @class = "form-control input-sm chat-input chkEdit" })
                                }
                                else
                                {
                                    @Html.TextAreaFor(m => m.EmployeeList[i].Comments, new { @class = "form-control input-sm chat-input chkEdit", disabled = "disabled" })
                                }
                            </td>
                            @if (ViewBag.allowEdit == true)
                            {
                                <td>
                                    <label class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(m => m.EmployeeList[i].EditCheckBox, new { style = "display: none;", @class = "custom-control-input EditCheckBoxSelect" })
                                        <span class="custom-control-indicator"></span>
                                    </label>
                                </td>
                            }
                            <td class="text-center">
                                <a href="#" class="fas fa-info-circle TableLinkStyle InfoClick infoLinkStyle"
                                   data-EmpCd="@Model.EmployeeList[i].EmpCd" data-toggle="tooltip" data-placement="bottom" title="View Details" id="Infolink"></a>

                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @if (ViewBag.allowEdit == true)
        { 
            <div class="row align-items-center rowCenter resultcontainerbuttons">
                @if (Model.EmployeeList.Count == 0)
                {

                    <div class="col-md-2">
                        <button name="submit"  value="@ViewBag.ButtonName" type="submit" disabled class="btn btn-primary btn-block">@ViewBag.ButtonText</button>
                    </div>
                }
                else
                { 
                    <div class="col-md-2">
                        <button name="submit" id="SaveUpdateBtn" value="@ViewBag.ButtonName" type="submit" class="btn btn-primary btn-block">@ViewBag.ButtonText</button>
                    </div>
                }
                <div class="col-md-2">
                    <button formnovalidate name="submit" id="resetBtn" value="ResetBtn" type="button" data-toggle="modal" data-target="#modalVM" class="btn btn-danger btn-block">Reset</button>
                </div>
              @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalVM">Launch modal</button>*@

                @if (@ViewBag.ButtonName == "SaveBtn")
                { 
                    <div class="col-md-2">
                        <button name="submit" id="LastMonth" value="CopyBtn" type="button" class="btn btn-primary btn-block">Copy From Last Quarter</button>
                    </div>
                }
            </div>
        }
    </div>
    
    }

    <!-- Modal -->
    <div id="TargetHistoryPopup" class="modal fade" role="dialog">
        <div class=" modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h3 style="text-align: center;" class="modal-title">Target History</h3>
                </div>
                <div id="ModelBody" class="modal-body">
                    <table id="TargetHistoryTbl" class="table table-striped" style="width: 100%">
                        <thead>
                            <tr>
                                <th>Emp ID</th>
                                <th>Employee Name</th>
                                <th>Reporting To</th>
                                <th class="text-center">Month</th>
                                <th class="text-center">Year</th>
                                <th class="text-center">Submission Target</th>
                                <th class="text-center">Interview Target</th>
                                <th class="text-center">Hires Target</th>
                                <th>Updated By</th>
                                <th>Date</th>
                                <th>Comments</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>	
    
    
    
    

}
<script>
    $(document).ready(function () {

        $('#resetBtn').click(function () {
            $("#SearchBtn").trigger("click");
        });
        var TeamDetailPostBackURL = '@Url.Action("ViewDetailsPopup")';
        // $(function () {
        $(".InfoClick").click(function () {
            var url = '@Url.Action("GetTargetHistoryForUser")';
            var EmpCd = $(this).attr('data-EmpCd');
            $.getJSON(url, { empCd: EmpCd }, function (data, status) {
                $('#TargetHistoryTbl').DataTable({
                    data: data,
                    columns: [
                        { "data": "EmpCd" },
                        { "data": "EmployeeName", className: "textCapitalize" },
                        { "data": "ManagerName", className: "textCapitalize" },
                        { "data": "Month.", className: "text-center" },
                        { "data": "Year", className: "text-center" },
                        { "data": "SubmissionTarget", className: "text-center" },
                        { "data": "InterviewTarget", className: "text-center" },
                        { "data": "HiresTarget", className: "text-center" },
                        { "data": "UpdatedBy", className: "textCapitalize" },
                        { "data": "UpdateDate" },
                        {
                            "data": "Comments",
                            className: "text-center",
                            "mRender": function (data, type, row, meta) {
                                if (data != "") {
                                    return '<a href="#" title="Comments" data-toggle="popover" data-trigger="focus" data-placement="left" data-content="' + data + '"><i class="fas fa-comments commentsGreen"></i></a>';
                                } else {
                                    return '<i class="fas fa-comments commentsGold"></i>'
                                }
                            }
                        }
                    ],
                    "destroy": true
                });
                $('#TargetHistoryPopup').modal('show');
                $('[data-toggle="popover"]').popover();
            });
        });
        $('.EditCheckBoxSelect').click(function () {
            var row = $(this).closest('tr');
            if ($(this).is(':checked')) {
                $(row).find('.chkEdit').prop("disabled", false);
            }
            else {
                $(row).find('.chkEdit').prop("disabled", true);
            }

            $('.EditCheckBoxSelect').each(function () {

                var row = $(this).closest('tr');
                if ($(this).is(':checked')) {
                    $(row).find('.chkEdit').prop("disabled", false);
                }
                else {
                    $(row).find('.chkEdit').prop("disabled", true);
                }
            });

            $('.EditCheckBoxSelect').each(function () {

                var row = $(this).closest('tr');
                if ($(this).is(':checked')) {
                    $('#SaveUpdateBtn').prop("disabled", false)
                    return false;
                }
                else {
                    $('#SaveUpdateBtn').prop("disabled", true)
                }
            });


        });
        $('.EditCheckBoxSelect').each(function () {

            var row = $(this).closest('tr');
            if ($(this).is(':checked')) {
                $('#SaveUpdateBtn').prop("disabled", false)
                return false;
            }
            else {
                $('#SaveUpdateBtn').prop("disabled", true)
            }
        });

        $('.EditCheckBoxSelect').each(function () {

            var row = $(this).closest('tr');
            $(row).find('.chkEdit').prop("disabled", !this.checked)
            //if ($(this).is(':checked')) {
            //    $(row).find('.chkEdit').prop("disabled", false);
            //}
            //else {
            //    $(row).find('.chkEdit').prop("disabled", true);
            //}
        });

        $('#SelectAllCheck').click(function () {
            $('.EditCheckBoxSelect').not(this).prop('checked', this.checked);
            $('.chkEdit').not(this).prop('disabled', !this.checked);
            $('#SaveUpdateBtn').prop("disabled", !this.checked)
        });

        $("#LastMonth").click(function () {
            $("#exampleModal").modal({ backdrop: 'static', keyboard: false });
          
        });

      

    });


    function GetData() {

        var jobRepartPartialUrl = '@Url.Action("PopulateTargets")';
        var $Year = parseInt($("#GetYear").val());
        var $getMonth = $("#GetMonth").val();
        var $empCd = $('#EmpCd option:selected').val();
        $.ajax({
            type: "GET",
            url: jobRepartPartialUrl,
            contentType: "application/json; charset=utf-8",
            data: { "ReportEmpCd": $empCd, "Month": $getMonth, "Year": $Year },
            datatype: "json",
            success: function (data) {

                $.map(data, function (item) {
                    
                    $("#UserList tbody tr").each(function () {

                        var $this = $(this);
                        if (item.EmpCd == $this.find("td:eq(0)").text().trim()) {
                            $this.find("td input[type=number]:eq(0)").val(item.SubmissionTarget);
                            $this.find("td input[type=number]:eq(1)").val(item.InterviewTarget);
                            $this.find("td input[type=number]:eq(2)").val(item.HiresTarget);
                            $this.find("td textarea:eq(0)").val(item.Comments);
                        }
                    });

                });
                $("#exampleModal").modal("hide");

            },
            error: function () {
                //alert("Dynamic content load failed.");
            }
        });
    }
    
</script>
