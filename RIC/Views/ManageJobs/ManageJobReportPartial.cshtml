@model IEnumerable<RIC.Models.TeamDashboardListModel>
@using RIC.CustomHelper

<input type="text" class="form-control" placeholder="Search" style="width: 20%;margin-left: 79.9%;" id="filter" name="filter">

<div class="tab-content clearfix textCapitalize">
    @if (Model.Count() != 0)
    {
        <div class="tab-pane active table-responsive" id="CheckedOut">
            <div style="width: 100%; ">
                <div style="padding: 20px;font-size: smaller;" class="">
                    <div class="row Tableheader">
                        <div class="column Col1Width"><label> Date</label></div>
                        
                        @foreach (var header in Model.FirstOrDefault().Month)
                        {
                            float width = (float)73 / (float)Model.FirstOrDefault().Month.Count();
                            <div style="width:@width%" class="column">
                                <label> @header.date.Day</label>
                            </div>
                        }
                        <div style="width:4%" class="column">&nbsp;</div>
                    </div>
                    <div class="row Tableheader">
                        <div class="column Col1Width"><label>Day</label></div>
                        @foreach (var header in Model.FirstOrDefault().Month)
                        {
                            float width = (float)73 / (float)Model.FirstOrDefault().Month.Count();
                            <div style="width:@width%" class="column">
                                <label> @header.date.DayOfWeek.ToString().Substring(0, 3)</label>
                            </div>
                        }
                        <div style="width:4%" class="column"><label>Total</label></div>
                    </div>

                    @ShowCheckedOutTree(Model.Where(s => s.EmployeeLvl == 0), "CheckedOutTable", 0)
                    @helper ShowCheckedOutTree(IEnumerable<RIC.Models.TeamDashboardListModel> foos, string id, int padding)
                    {
                        float width = (float)73 / (float)Model.FirstOrDefault().Month.Count();
                        string paddingStyle = "padding-left:" + padding + "px";
                        <div class="collapse " id="@id">
                            @foreach (var item in foos)
                            {

                                var empID = item.EmpCd.Substring(item.EmpCd.Length - 1) == "T" ? item.EmpCd.Remove(item.EmpCd.Length - 1) : item.EmpCd;
                                var items = Model.Where(s => s.MgrCd + "T" == item.EmpCd && s.Id.Contains(item.Id));

                                if (items.Count() > 0)
                                {
                                    string targetID = "CheckedOut_" + item.EmpCd + "_" + item.Id;
                                    <div class="row">
                                        <div class="column Col1Width Tableheader">
                                            <label style="@paddingStyle">
                                                <a style="cursor:pointer" class="fas fa-user-plus spanClick" data-toggle="collapse" data-target="#@targetID"></a>
                                                @Html.DisplayFor(modelItem => item.Job_Diva_User_Name)
                                            </label>
                                        </div>
                                        @foreach (var checkedOutData in item.Month)
                                        {
                                            <div style="width:@width%" class="column tableRowStyle1">
                                                @if (checkedOutData.CheckedOutCount != 0 && empID != "Total")
                                                {
                                                    <a href="javascript:void(0);" class="linkColor anchorDetail linkStyle" data-Jr="CheckedOut" data-empCD="@empID"
                                                       data-FromDate="@checkedOutData.date" data-ToDate="@checkedOutData.date" data-IndividualRecord="No">@checkedOutData.CheckedOutCount</a>
                                                }
                                                else
                                                {
                                                    @checkedOutData.CheckedOutCount
                                                }
                                            </div>
                                        }
                                        <div style="width:4%" class="column tableTotalStyle">
                                            @if (item.CheckedOut_Month != 0 && empID != "Total")
                                            {
                                                <a href="javascript:void(0);" class="linkColor anchorDetail linkStyle" data-Jr="CheckedOut" data-empCD="@empID"
                                                   data-FromDate="@item.FromDate" data-ToDate="@item.ToDate" data-IndividualRecord="No">
                                                    @item.CheckedOut_Month
                                                </a>
                                            }
                                            else
                                            {
                                                @item.CheckedOut_Month
                                            }
                                        </div>
                                    </div>
                                    @ShowCheckedOutTree(items, targetID, padding + 15)
                                }
                                else
                                {
                                    <div class="row">
                                        <div class=" column Col1Width Tableheader">
                                            <label style="@paddingStyle">
                                                @Html.DisplayFor(modelItem => item.Job_Diva_User_Name)
                                            </label>
                                        </div>
                                        @foreach (var checkedOutData in item.Month)
                                        {
                                            <div style="width:@width%" class="column tableRowStyle">
                                                @if (checkedOutData.CheckedOutCount != 0 && empID != "Total")
                                                {
                                                    <a href="javascript:void(0);"
                                                       class="linkColor anchorDetail linkStyle"
                                                       data-Jr="CheckedOut"
                                                       data-empCD="@empID"
                                                       data-FromDate="@checkedOutData.date"
                                                       data-ToDate="@checkedOutData.date"
                                                       data-IndividualRecord="Yes">@checkedOutData.CheckedOutCount</a>
                                                }
                                                else
                                                {
                                                    @checkedOutData.CheckedOutCount
                                                }
                                            </div>
                                        }
                                        <div style="width:4%" class="column tableTotalStyle">

                                            @if (item.CheckedOut_Month != 0 && item.EmpCd != "Total")
                                            {
                                                <a href="javascript:void(0);"
                                                   class="linkColor anchorDetail linkStyle"
                                                   data-Jr="CheckedOut" data-empCD="@empID"
                                                   data-FromDate="@item.FromDate"
                                                   data-ToDate="@item.ToDate"
                                                   data-IndividualRecord="Yes">
                                                    @item.CheckedOut_Month
                                                </a>
                                            }
                                            else
                                            {
                                                @item.CheckedOut_Month
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        
        
    }
</div>
<script>
    //toggle the first row.
    $('#CheckedOutTable').toggle();
    //change the toggle icon.
    $('.spanClick').click(function () {
        var cs = $(this).attr("class");
        //console.log(cs);
        if (cs.indexOf('fas fa-user-plus') != -1)
        {
            $(this).removeClass('fas fa-user-plus').addClass('fas fa-user-minus');
            if ($("#filter").val().trim() != "") {
                var teamFilterId = $(this).attr("data-target");
                if ($(teamFilterId).find(".collapse").length <= 1) {
                    $(teamFilterId).find(".row").show();
                }
            }

        }
        else
        {
            $(this).removeClass('fas fa-user-minus').addClass('fas fa-user-plus');

        }
    });

    var ManageJobsDetailPostBackURL = '@Url.Action("ViewDetailsPopup","ManageJobs")';
     // $(function () {
     $(".anchorDetail").click(function () {
         var $buttonClicked = $(this);
         var fromDate = $buttonClicked.attr('data-FromDate');
         var toDate = $buttonClicked.attr('data-ToDate');
         var empCD = $buttonClicked.attr('data-empCD');
         var getIndividualRecord = $buttonClicked.attr('data-IndividualRecord');
         var options = { "backdrop": "static", keyboard: true };
         $.ajax({
             type: "GET",
             url: ManageJobsDetailPostBackURL,
             contentType: "application/json; charset=utf-8",
             data: { "fromDate": fromDate, "toDate": toDate,  "empCd": empCD, "getIndividualRecord": getIndividualRecord },
             datatype: "json",
             success: function (data) {
                 $('#myModalContent').html(data);
                 $('#myModal').modal(options);
                 $('#myModal').modal('show');
             },
             error: function () {
             }
         });
     });

     $(document).ready(function () {

         //To show the first level hirerachy
            hideFirstLevel();

          // Search by Names 
            $("#filter").on("keyup", function () {               
                var value = $(this).val().toLowerCase();
                var array1 = new Array();
                if (value.length > 0) {
                    $("#CheckedOutTable .collapse").addClass("in");
                }
                else {
                    $("#CheckedOutTable .collapse").removeClass("in");
                    hideFirstLevel();
                    $("#CheckedOutTable").find(".collapse:gt(0)").removeClass("in");
                    $("#CheckedOutTable").find(".spanClick:gt(0)").removeClass('fas fa-user-minus').addClass('fas fa-user-plus');
                }
                $("#CheckedOutTable .row").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                    if ($(this).text().toLowerCase().indexOf(value) > -1) {

                        array1.push($(this).parent().attr("id"));

                    }
                });
             
                if (value.length > 0) {
                    if (array1.length > 0) {
                        for (var i = 0; i < array1.length; i++) {
                            getParentId(array1[i]);
                        }
                    }
                    else if (array1.length == 0) {
                        getParentId(array1[0]);
                    }
                }
            });


     });

       //To show the first hirerachy level.
        function hideFirstLevel() {
            $("#CheckedOutTable").find(".collapse:eq(0)").addClass("in");
            $("#CheckedOutTable").find(".spanClick:eq(0)").removeClass('fas fa-user-plus').addClass('fas fa-user-minus');
        }



       //After searching the names it will show the full hirerachy of each user.
        function getParentId(parentId) {
            var $generateId = '#' + parentId;
            $($generateId).prev().show();
            $($generateId).find(".spanClick:eq(0)").removeClass('fas fa-user-plus').addClass('fas fa-user-minus');
            if ($($generateId).parent().attr("id") != "" || $($generateId).parent().attr("id") != undefined)
                getParentId($($generateId).parent().attr("id"));
        }





</script>