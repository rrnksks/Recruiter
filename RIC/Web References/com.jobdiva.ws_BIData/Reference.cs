//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3655
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "BIDataSOAP", Namespace = "http://ws.jobdiva.com/BIData/")]
public partial class BIData : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback getBIDataOperationCompleted;

    /// <remarks/>
    public BIData()
    {
        this.Url = "http://ws.jobdiva.com/axis2/services/BIData/";
    }

    /// <remarks/>
    public event getBIDataCompletedEventHandler getBIDataCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.jobdiva.com/BIData/getBIData", RequestNamespace = "http://ws.jobdiva.com/BIData/", ResponseNamespace = "http://ws.jobdiva.com/BIData/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("Message", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string getBIData([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string MetricName, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string ClientID, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string Username, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")] System.DateTime FromDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool FromDateSpecified, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")] System.DateTime ToDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool ToDateSpecified, [System.Xml.Serialization.XmlElementAttribute("Parameters", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] Parameters, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out DataSet Data)
    {
        object[] results = this.Invoke("getBIData", new object[] {
                    MetricName,
                    ClientID,
                    Username,
                    Password,
                    FromDate,
                    FromDateSpecified,
                    ToDate,
                    ToDateSpecified,
                    Parameters});
        Data = ((DataSet)(results[1]));
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingetBIData(string MetricName, string ClientID, string Username, string Password, System.DateTime FromDate, bool FromDateSpecified, System.DateTime ToDate, bool ToDateSpecified, string[] Parameters, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("getBIData", new object[] {
                    MetricName,
                    ClientID,
                    Username,
                    Password,
                    FromDate,
                    FromDateSpecified,
                    ToDate,
                    ToDateSpecified,
                    Parameters}, callback, asyncState);
    }

    /// <remarks/>
    public string EndgetBIData(System.IAsyncResult asyncResult, out DataSet Data)
    {
        object[] results = this.EndInvoke(asyncResult);
        Data = ((DataSet)(results[1]));
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void getBIDataAsync(string MetricName, string ClientID, string Username, string Password, System.DateTime FromDate, bool FromDateSpecified, System.DateTime ToDate, bool ToDateSpecified, string[] Parameters)
    {
        this.getBIDataAsync(MetricName, ClientID, Username, Password, FromDate, FromDateSpecified, ToDate, ToDateSpecified, Parameters, null);
    }

    /// <remarks/>
    public void getBIDataAsync(string MetricName, string ClientID, string Username, string Password, System.DateTime FromDate, bool FromDateSpecified, System.DateTime ToDate, bool ToDateSpecified, string[] Parameters, object userState)
    {
        if ((this.getBIDataOperationCompleted == null))
        {
            this.getBIDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBIDataOperationCompleted);
        }
        this.InvokeAsync("getBIData", new object[] {
                    MetricName,
                    ClientID,
                    Username,
                    Password,
                    FromDate,
                    FromDateSpecified,
                    ToDate,
                    ToDateSpecified,
                    Parameters}, this.getBIDataOperationCompleted, userState);
    }

    private void OngetBIDataOperationCompleted(object arg)
    {
        if ((this.getBIDataCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getBIDataCompleted(this, new getBIDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.jobdiva.com/BIData/")]
public partial class DataSet
{

    private string[] columnsField;

    private RowData[] rowField;

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("Column", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
    public string[] Columns
    {
        get
        {
            return this.columnsField;
        }
        set
        {
            this.columnsField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Row", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public RowData[] Row
    {
        get
        {
            return this.rowField;
        }
        set
        {
            this.rowField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.jobdiva.com/BIData/")]
public partial class RowData
{

    private Pair[] rowData1Field;

    private string dummyFriendField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RowData", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public Pair[] RowData1
    {
        get
        {
            return this.rowData1Field;
        }
        set
        {
            this.rowData1Field = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string dummyFriend
    {
        get
        {
            return this.dummyFriendField;
        }
        set
        {
            this.dummyFriendField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.jobdiva.com/BIData/")]
public partial class Pair
{

    private string nameField;

    private string valueField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string Name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string Value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getBIDataCompletedEventHandler(object sender, getBIDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getBIDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal getBIDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }

    /// <remarks/>
    public DataSet Data
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((DataSet)(this.results[1]));
        }
    }
}
